version: "3.2"
services:
  php-teste-vikings:
    container_name: php-teste-vikings
    image: php:7.3.6-fpm
    build:
      context: application
      dockerfile: Dockerfile
    volumes:
      - ./application/:/var/www/html
      - ./application/docker/php/config/extensions.ini:/usr/local/etc/php/conf.d/extensions.ini
    environment:
      - UPDATE_COMPOSER_DEPENDENCIES=true
      - USE_PHP_FPM=true
    ports:
      - 8081:80
    working_dir: /var/www/html/
    networks:
      - network-vikings
  nginx-webserver-teste-vikings:
    container_name: nginx-webserver-teste-vikings
    image: "nginx:1.13.8-alpine"
    volumes:
      - ./application/:/var/www/html/
      - ./application/docker/nginx/backend/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8082:80"
    depends_on:
      - php-teste-vikings
    networks:
      - network-vikings
  frontend-teste-vikings:
    image: node:latest
    container_name: __frontend-teste-vikings
    user: "node"
    working_dir: /home/node/app
    volumes:
      - ./__frontend:/home/node/app
    command:
      sh -c 'npm install && npm run serve'
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - VUE_APP_API=http://localhost:8082 # endere√ßo do backend nfe.
    networks:
      - network-vikings
  mysql-teste-vikings:
    container_name: mysql-teste-vikings
    image: mysql
    #    build:
    #      context: docker
    #      dockerfile: mysql/Dockerfile
    restart: always
    command: mysqld --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: 'db_vikings'
      MYSQL_USER: 'user_vikings'
      MYSQL_PASSWORD: 'pass_vikings'
      MYSQL_ROOT_PASSWORD: 'pass_vikings'
    ports:
      - "3304:3306"
    volumes:
      - ./database/:/docker-entrypoint-initdb.d/
      - ./database/docker-data/mysql/8.0:/var/lib/mysql
    networks:
      - network-vikings
networks:
  network-vikings:
    driver: bridge
